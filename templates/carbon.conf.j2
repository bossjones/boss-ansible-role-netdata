# See {{ graphite_install_path }}/conf/carbon.conf.example for more information.
# See: https://github.com/hopsoft/docker-graphite-statsd/blob/master/conf/opt/graphite/conf/carbon.conf

[cache]
# Configure carbon directories.
#
# OS environment variables can be used to tell carbon where graphite is
# installed, where to read configuration from and where to write data.
#
#   GRAPHITE_ROOT        - Root directory of the graphite installation.
#                          Defaults to ../
#   GRAPHITE_CONF_DIR    - Configuration directory (where this file lives).
#                          Defaults to $GRAPHITE_ROOT/conf/
#   GRAPHITE_STORAGE_DIR - Storage directory for whipser/rrd/log/pid files.
#                          Defaults to $GRAPHITE_ROOT/storage/
#
# To change other directory paths, add settings to this file. The following
# configuration variables are available with these default values:
#
#   STORAGE_DIR    = $GRAPHITE_STORAGE_DIR
#   LOCAL_DATA_DIR = STORAGE_DIR/whisper/
#   WHITELISTS_DIR = STORAGE_DIR/lists/
#   CONF_DIR       = STORAGE_DIR/conf/
#   LOG_DIR        = STORAGE_DIR/log/
#   PID_DIR        = STORAGE_DIR/
#
# For FHS style directory structures, use:
#
#   STORAGE_DIR    = /var/lib/carbon/
#   CONF_DIR       = /etc/carbon/
#   LOG_DIR        = /var/log/carbon/
#   PID_DIR        = /var/run/
#

LOCAL_DATA_DIR = {{ graphite_cache_local_data_dir }}
DATABASE = {{ graphite_cache_database }}
ENABLE_LOGROTATION = {{ graphite_cache_enable_log_rotation }}
USER = {{ graphite_cache_user|default("") }}

# Limit the size of the cache to avoid swapping or becoming CPU bound.
# Sorts and serving cache queries gets more expensive as the cache grows.
# Use the value "inf" (infinity) for an unlimited cache size.
MAX_CACHE_SIZE = {{ graphite_cache_max_cache_size }}

# Limits the number of whisper update_many() calls per second, which effectively
# means the number of write requests sent to the disk. This is intended to
# prevent over-utilizing the disk and thus starving the rest of the system.
# When the rate of required updates exceeds this, then carbon's caching will
# take effect and increase the overall throughput accordingly.
MAX_UPDATES_PER_SECOND = {{ graphite_cache_max_updates_per_second }}

MAX_UPDATES_PER_SECOND_ON_SHUTDOWN = {{ graphite_cache_max_updates_per_second_on_shutdown }}
MAX_CREATES_PER_MINUTE = {{ graphite_cache_max_creates_per_minute }}
MIN_TIMESTAMP_RESOLUTION = {{ graphite_cache_min_timestamp_resolution }}
LINE_RECEIVER_INTERFACE = {{ graphite_cache_line_receiver_interface }}
LINE_RECEIVER_PORT = {{ graphite_cache_line_receiver_port }}
ENABLE_UDP_LISTENER = {{ graphite_cache_enable_udp_listener }}
UDP_RECEIVER_INTERFACE = {{ graphite_cache_udp_receiver_interface }}
UDP_RECEIVER_PORT = {{ graphite_cache_udp_receiver_port }}
PICKLE_RECEIVER_INTERFACE = {{ graphite_cache_pickle_receiver_interface }}
PICKLE_RECEIVER_PORT = {{ graphite_cache_pickle_receiver_port }}
USE_INSECURE_UNPICKLER = {{ graphite_cache_use_insecure_unpickler }}
CACHE_QUERY_INTERFACE = {{ graphite_cache_cache_query_interface }}
CACHE_QUERY_PORT = {{ graphite_cache_cache_query_port }}
USE_FLOW_CONTROL = {{ graphite_cache_use_flow_control }}
LOG_UPDATES = {{ graphite_cache_log_updates }}
LOG_CREATES = {{ graphite_cache_log_creates }}
LOG_CACHE_HITS = {{ graphite_cache_log_cache_hits }}
LOG_CACHE_QUEUE_SORTS = {{ graphite_cache_log_cache_queue_sorts }}
CACHE_WRITE_STRATEGY = {{ graphite_cache_cache_write_strategy }}
WHISPER_AUTOFLUSH = {{ graphite_cache_whisper_autoflush }}
WHISPER_SPARSE_CREATE = {{ graphite_cache_whisper_sparse_create }}
WHISPER_FALLOCATE_CREATE = {{ graphite_cache_whisper_fallocate_create }}
WHISPER_LOCK_WRITES = {{ graphite_cache_whisper_lock_writes }}
USE_WHITELIST = {{ graphite_cache_use_whitelist }}
CARBON_METRIC_PREFIX = {{ graphite_cache_carbon_metric_prefix }}
CARBON_METRIC_INTERVAL = {{ graphite_cache_carbon_metric_interval }}
ENABLE_AMQP = {{ graphite_cache_enable_amqp }}
AMQP_VERBOSE = {{ graphite_cache_amqp_verbose }}
AMQP_HOST = {{ graphite_cache_amqp_host }}
AMQP_PORT = {{ graphite_cache_amqp_port }}
AMQP_VHOST = {{ graphite_cache_amqp_vhost }}
AMQP_USER = {{ graphite_cache_amqp_user }}
AMQP_PASSWORD = {{ graphite_cache_amqp_password }}
AMQP_EXCHANGE = {{ graphite_cache_amqp_exchange }}
AMQP_METRIC_NAME_IN_BODY = {{ graphite_cache_amqp_metric_name_in_body }}
ENABLE_MANHOLE = {{ graphite_cache_enable_manhole }}
MANHOLE_INTERFACE = {{ graphite_cache_manhole_interface }}
MANHOLE_PORT = {{ graphite_cache_manhole_port }}
MANHOLE_USER = {{ graphite_cache_manhole_user }}
MANHOLE_PUBLIC_KEY = {{ graphite_cache_manhole_public_key }}
BIND_PATTERNS = {{ graphite_cache_bind_patterns }}
{% if graphite_install_version|version_compare('1.1.3', '>=') and graphite_cache_graphite_url %}
GRAPHITE_URL = {{ graphite_cache_graphite_url }}
{% endif %}

[relay]
{% if graphite_relay_user is defined -%}
USER = {{ graphite_relay_user }}
{% endif -%}
LINE_RECEIVER_INTERFACE = {{ graphite_relay_line_receiver_interface }}
LINE_RECEIVER_PORT = {{ graphite_relay_line_receiver_port }}
PICKLE_RECEIVER_INTERFACE = {{ graphite_relay_pickle_receiver_interface }}
PICKLE_RECEIVER_PORT = {{ graphite_relay_pickle_receiver_port }}
RELAY_METHOD = {{ graphite_relay_relay_method }}
REPLICATION_FACTOR = {{ graphite_relay_replication_factor }}
DESTINATIONS = {{ graphite_relay_destinations }}
MAX_DATAPOINTS_PER_MESSAGE = {{ graphite_relay_max_datapoints_per_message }}
QUEUE_LOW_WATERMARK_PCT = {{ graphite_relay_queue_low_watermark_pct }}
TIME_TO_DEFER_SENDING = {{ graphite_relay_time_to_defer_sending }}
MAX_QUEUE_SIZE = {{ graphite_relay_max_queue_size }}
USE_FLOW_CONTROL = {{ graphite_relay_use_flow_control }}
USE_RATIO_RESET = {{ graphite_relay_use_ratio_reset }}
MIN_RESET_STAT_FLOW = {{ graphite_relay_min_reset_stat_flow }}
MIN_RESET_RATIO = {{ graphite_relay_min_reset_ratio }}
MIN_RESET_INTERVAL = {{ graphite_relay_min_reset_interval }}

USE_WHITELIST = {{ graphite_relay_use_whitelist }}
CARBON_METRIC_PREFIX = {{ graphite_relay_carbon_metric_prefix }}
CARBON_METRIC_INTERVAL = {{ graphite_relay_carbon_metric_interval }}

[aggregator]
{% if graphite_aggregator_user is defined -%}
USER = {{ graphite_aggregator_user }}
{% endif -%}
LINE_RECEIVER_INTERFACE = {{ graphite_aggregator_line_receiver_interface }}
LINE_RECEIVER_PORT = {{ graphite_aggregator_line_receiver_port }}
PICKLE_RECEIVER_INTERFACE = {{ graphite_aggregator_pickle_receiver_interface }}
PICKLE_RECEIVER_PORT = {{ graphite_aggregator_pickle_receiver_port }}
FORWARD_ALL = {{ graphite_aggregator_forward_all }}
DESTINATIONS = {{ graphite_aggregator_destinations }}
REPLICATION_FACTOR = {{ graphite_aggregator_replication_factor }}
MAX_QUEUE_SIZE = {{ graphite_aggregator_max_queue_size }}
USE_FLOW_CONTROL = {{ graphite_aggregator_use_flow_control }}
MAX_DATAPOINTS_PER_MESSAGE = {{ graphite_aggregator_max_datapoints_per_message }}
MAX_AGGREGATION_INTERVALS = {{ graphite_aggregator_max_aggregation_intervals }}
WRITE_BACK_FREQUENCY = {{ graphite_aggregator_write_back_frequency }}
USE_WHITELIST = {{ graphite_aggregator_use_whitelist }}
CARBON_METRIC_PREFIX = {{ graphite_aggregator_carbon_metric_prefix }}
CARBON_METRIC_INTERVAL = {{ graphite_aggregator_carbon_metric_interval }}
